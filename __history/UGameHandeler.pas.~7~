unit UGameHandeler;

interface

uses
  System.SysUtils, classes, UTypes, UCard, UFileHandeling, UFish, System.Generics.Collections;

type
  TGameHandeler = class
    private
      Delimiter: string;

      commands: TDictionary<string, integer>;
      RankNames: TDictionary<string, integer>;
      SuitNames: TDictionary<string, integer>;

      game: TFish;
      currentUser: integer;

    public
      constructor create;
      function GetUserIn: TArrayOfString;
      procedure man;
      procedure ExecuteUserInstruction(cmd: TArrayOfString);
      procedure Welcome;
      procedure play;
      function interpretCard(input: string): Tcard;
      function interpretRank(input: string): integer;
  end;

const
  manFilePath = 'man.txt';

implementation

{ TGameHandeler }

function TGameHandeler.GetUserIn: TArrayOfString;
var
  userin: string;
begin
  while length(userin) < 3 do
  begin
    write('~: ');
    readln(userin);
  end;

  result := userin.Split([delimiter]);

end;

function TGameHandeler.interpretCard(input: string): Tcard;
var
  SplitInput: Tarray<string>;
  rank, suit: integer;

begin
  SplitInput := input.Split([' ']);
  rank := RankNames.Items[SplitInput[0]];
  suit := SuitNames.Items[SplitInput[2]];
  result := game.pack.findCard(rank, suit);
end;

function TGameHandeler.interpretRank(input: string): integer;
begin

end;

constructor TGameHandeler.create;
begin
  Delimiter := '; ';

  commands := TDictionary<string, integer>.create();
  commands.Add('m', 0);
  commands.Add('man', 0);
  commands.Add('n', 1);
  commands.Add('new', 1);
  commands.Add('a', 2);
  commands.Add('ask', 2);

  welcome;
end;

procedure TGameHandeler.ExecuteUserInstruction(cmd: TArrayOfString);
begin
  case commands.Items[cmd[0]] of
    0:
      man;
    1:
      game := TFish.create(strToint(cmd[1]));
    //There should be error checking here to make sure that more than zero users is entered
   { 2:
      game.AskForCard()
  }end;


end;

procedure TGameHandeler.man;
var
  manFile: TFile;
  mancontents: TArrayOfString;
begin
  manfile := TFile.create(manfilepath);
  manfile.printfile;
  manfile.Destroy;
end;

procedure TGameHandeler.play;
begin

end;

procedure TGameHandeler.Welcome;
const
  welcomeFilePath = 'ASCIIFISH.txt';
var
  welcomeFile: TFile;
begin
  welcomeFile := TFile.create(welcomeFilePath);
  welcomeFile.printFile;
  welcomeFile.Destroy;
end;

end.
